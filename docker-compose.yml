
services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq-container
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

  postgres:
    image: postgres:14
    container_name: meu_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT_MAPPING}"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  influxdb2:
    image: influxdb:2
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: ${INFLUXDB_INIT_MODE}
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_INIT_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_INIT_PASSWORD}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_INIT_ADMIN_TOKEN}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_INIT_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_INIT_BUCKET}

    volumes:
      - type: volume
        source: influxdb2-data
        target: /var/lib/influxdb2
      - type: volume
        source: influxdb2-config
        target: /etc/influxdb2

  backend:
    build:
      context: ./backend/space
    container_name: meu_spring_boot_app
    ports:
      - "${SPRING_BOOT_PORT}"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    volumes:
      - .env:/app/.env
    depends_on:
      - postgres
      - rabbitmq

  frontend:
    build:
      context: ./frontend/space
    container_name: meu_react_app
    ports:
      - "${FRONTEND_PORT}"
    volumes:
    - .env:/app/.env
    stdin_open: true
    tty: true
    depends_on:
      - backend

  gerador:
    build:
      context: ./rocket_generator
    container_name: gerador
    depends_on:
      - rabbitmq
    command: ["poetry", "run", "python", "rocket_generator/receiver.py"]
    restart: always

volumes:
  postgres_data:
  influxdb2-data:
  influxdb2-config:
