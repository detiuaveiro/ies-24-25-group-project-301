version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq-container
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  postgres:
    image: postgres:14
    container_name: meu_postgres
    environment:
      POSTGRES_USER: space
      POSTGRES_PASSWORD: space
      POSTGRES_DB: space
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  influxdb2:
    image: influxdb:2
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: MyInitialAdminPassword
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: MyInitialAdminToken0==
      DOCKER_INFLUXDB_INIT_ORG: docs
      DOCKER_INFLUXDB_INIT_BUCKET: home
    secrets:
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token
    # volumes:
    #   - type: volume
    #     source: influxdb2-data
    #     target: /var/lib/influxdb2
    #   - type: volume
    #     source: influxdb2-config
    #     target: /etc/influxdb2

  backend:
    build:
      context: ./backend/space
    container_name: meu_spring_boot_app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/space
      SPRING_DATASOURCE_USERNAME: space
      SPRING_DATASOURCE_PASSWORD: space
    volumes:
      - .env:/app/.env
    depends_on:
      - postgres
      - rabbitmq

  frontend:
    build:
      context: ./frontend/space
    container_name: meu_react_app
    ports:
      - "3000:3000"
    env_file:
      - .env
    stdin_open: true
    tty: true
    depends_on:
      - backend

  gerador:
    build:
      context: ./rocket_generator
    container_name: gerador
    depends_on:
      - rabbitmq
    command: ["poetry", "run", "python", "rocket_generator/receiver.py"]
    restart: always

secrets:
  influxdb2-admin-username:
    file: ./backend/space/secrets/.env.influxdb2-admin-username
  influxdb2-admin-password:
    file: ./backend/space/secrets/.env.influxdb2-admin-password
  influxdb2-admin-token:
    file: ./backend/space/secrets/.env.influxdb2-admin-token

volumes:
  postgres_data:
  # influxdb2-data:
  influxdb2-config:
